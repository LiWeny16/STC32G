C251 COMPILER V5.60.0,  road                                                               04/04/23  11:50:09  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE road
OBJECT MODULE PLACED IN .\Out\road.obj
COMPILER INVOKED BY: C:\Learning\Keil_v5\body\C251\BIN\C251.EXE User\User_c\road.c XSMALL INTR2 BROWSE INCDIR(.\Lib\libr
                    -aries;.\Lib\seekfree_libraries;.\Lib\seekfree_peripheral;.\User\User_h) DEBUG PRINT(.\Listings\road.lst) TABS(2) OBJECT(
                    -.\Out\road.obj) 

stmt  level    source

    1          // 该文件用于对道路情况进行判断，并将相应标志位赋值
    2          
    3          #include "road.h"
    4          Road road_judge(TIMER *timer,FLAG *road_flag,DG_State *dg_state ,Err_Steering *err_steering)
    5          {
    6   1        int32 L_Sum;
    7   1        L_Sum = dg_state->L_zh_real + dg_state->L_yh_real + dg_state->L_zx_real + dg_state->L_yx_real;
    8   1        tempVar = (float)L_Sum;
    9   1        //***************************
   10   1        if(timer->time0_0>100){ //到时间了，做事情
   11   2          if(
   12   2              road_flag->Cross_Flag_Last==1 && 
   13   2              L_Sum >= 10500 &&
   14   2              isNear(&dg_state, 2660, 2199, 3766, 3158,15000) == 0
   15   2          ){
*** WARNING C98 IN LINE 12 OF User\User_c\road.c: parameter 1: pointer to different objects
*** WARNING C91 IN LINE 12 OF User\User_c\road.c: '&': pointer to different objects
   16   3            road_flag->Cross_Flag++;
   17   3          }
   18   2          //清除计时器
   19   2          timer->time0_0=0;
   20   2          timer->time0_1=0;
   21   2        } 
   22   1        //***************************
   23   1        
   24   1        if (400 < L_Sum && L_Sum < 5000) // 直走
   25   1        {
   26   2          return Straight;
   27   2        }
   28   1        else if ( // 左转
   29   1          5000 <= L_Sum &&
   30   1          L_Sum < 6000 &&
   31   1          err_steering->Err < 0)
   32   1        {
   33   2          return Curve_Left;
   34   2        }
   35   1        else if ( // 右转
   36   1          5000 <= L_Sum &&
   37   1          L_Sum < 6000 &&
   38   1          err_steering->Err >= 0)
   39   1        {
   40   2          return Curve_Right;
   41   2        }
   42   1        else if ( // 在圆环内
   43   1          6800 <= L_Sum &&
   44   1          err_steering->Err < 0)
   45   1        {
   46   2          return Big_Ring;
   47   2        }
   48   1        else if ( //进环点
   49   1          L_Sum >= 11000 &&
   50   1          isNear(&dg_state,3779,3775,3740,233,12000)==1
   51   1          )
*** WARNING C98 IN LINE 49 OF User\User_c\road.c: parameter 1: pointer to different objects
*** WARNING C91 IN LINE 49 OF User\User_c\road.c: '&': pointer to different objects
   52   1        {
   53   2          if(road_flag->Ring_Out_Flag ==0){//不同时为1，代表没走过大圆环
C251 COMPILER V5.60.0,  road                                                               04/04/23  11:50:09  PAGE 2   

   54   3            road_flag->Ring_In_Flag=1;
   55   3              return Ring_In;
   56   3          }else{
   57   3            // 代表走过了，略过即可
   58   3            return Straight;
   59   3          }
   60   2        }
   61   1        else if ( //出环点
   62   1          L_Sum >= 12000 &&
   63   1          isNear(&dg_state,3784,2871,3782,2508,12000)==1
   64   1          )
*** WARNING C98 IN LINE 62 OF User\User_c\road.c: parameter 1: pointer to different objects
*** WARNING C91 IN LINE 62 OF User\User_c\road.c: '&': pointer to different objects
   65   1        {
   66   2          if(road_flag->Ring_In_Flag ==1){
   67   3            road_flag->Ring_Out_Flag =1;//碰到且已经入圆环，就打标记
   68   3            return Ring_Out;
   69   3          }else{
   70   3            return Straight;
   71   3          }
   72   2        }
   73   1        else if ( // 十字路口
   74   1          L_Sum >= 10500 &&
   75   1          isNear(&dg_state, 2660, 2199, 3766, 3158,15000) == 1)
*** WARNING C98 IN LINE 74 OF User\User_c\road.c: parameter 1: pointer to different objects
*** WARNING C91 IN LINE 74 OF User\User_c\road.c: '&': pointer to different objects
   76   1        {
   77   2          road_flag->Ring_In_Flag = 0;
   78   2          road_flag->Ring_Out_Flag = 0;
   79   2          road_flag->Cross_Flag_Last = 1;
   80   2          //定时器*******************
   81   2          timer->time0_0++;
   82   2          if(timer->time0_0==500){
   83   3            timer->time0_1++;
   84   3            timer->time0_1=timer->time0_1>=10?0:timer->time0_1;//防止溢出
   85   3          }
   86   2        
   87   2          //定时器*******************
   88   2          return Force_Straight;
   89   2        }
   90   1        else if ((dg_state->L_zh_real <= 6) || //完全丢线
   91   1             (dg_state->L_yh_real <= 6) ||
   92   1             (dg_state->L_zx_real <= 6) ||
   93   1             (dg_state->L_yx_real <= 6))
   94   1        {
   95   2          return Stop;
   96   2        }
   97   1      
   98   1        else
   99   1        {
  100   2          return Straight;
  101   2        }
  102   1      }
  103          int16 isNear(DG_State *dg_state,int16 zh,int16 yh,int16 zx,int16 yx,int16 bear)
  104          {
  105   1        if((float)(((int16)dg_state->L_zh_real - zh) * ((int16)dg_state->L_zh_real - zh) +
  106   1             ((int16)dg_state->L_yh_real - yh) * ((int16)dg_state->L_yh_real - yh) +
  107   1             ((int16)dg_state->L_zx_real - zx) * ((int16)dg_state->L_zx_real - zx) +
  108   1             ((int16)dg_state->L_yx_real - yx) * ((int16)dg_state->L_yx_real - yx)) /10 <=bear)
  109   1        {
  110   2          return 1;
  111   2        }
  112   1        else
  113   1        {
  114   2          return 0;
  115   2        }
C251 COMPILER V5.60.0,  road                                                               04/04/23  11:50:09  PAGE 3   

  116   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       736     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------         22
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  8 WARNING(S),  0 ERROR(S)
